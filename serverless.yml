service: aqts-capture-state-machine

provider:
  name: aws
  region: ${opt:region, 'us-west-2'}
  stage: ${opt:stage, 'TEST'}
  deploymentBucket:
    name: ${opt:bucket, iow-cloud-applications}
  stackTags:
    "wma:applicationId": "Aquarius TS Capture State Machine"
    "wma:contact": "Andrew Yan ayan@usgs.gov"
    "wma:role": etl
    "wma:system": NWIS
    "wma:subSystem": NWISWeb-Capture
    "wma:environment": ${self:provider.stage}
    "wma:taggingVersion": 0.0.1
    "wma:costCenter": TBD
    "commitIdentifier": "${git:sha1}"
    "wma:organization": IOW
    "displayName": "State Machine"

custom:
  tier:
    DEV:
      parsed: DEV
      lower: dev
    TEST:
      parsed: TEST
      lower: test
    QA:
      parsed: QA
      lower: qa
    PROD-EXTERNAL:
      parsed: PRODDashEXTERNAL
      lower: prod-external

stepFunctions:
  stateMachines:
    aqtsCaptureStateMachine:
      type: EXPRESS
      loggingConfig:
        level: ALL
        includeExecutionData: true
        destinations:
          - arn:aws:logs:${self:provider.region}:#{AWS::AccountId}:log-group:step-functions-${self:custom.tier.${self:provider.stage}.lower}:*
      alarms:
        topics:
          alarm:
            Ref: snsTopic
        metrics:
          - executionsFailed
          - executionThrottled
        treatMissingData: missing
      role: arn:aws:iam::#{AWS::AccountId}:role/step-functions-service-access
      name: aqts-capture-state-machine-${self:provider.stage}
      definition:
        Comment: "State machine representing extract, transformation, and load from Aquarius"
        StartAt: captureInitialLoadRouter
        States:
          captureInitialLoadRouter:
            Type: Choice
            Choices:
              - Variable: "$.Record.s3.object.size"
                NumericLessThanEquals: 23500000 # empirically selected value on 2020-11-05
                Next: captureInitialLoadExtraSmall
              - And:
                - Variable: "$.Record.s3.object.size"
                  NumericGreaterThan: 23500000
                - Variable: "$.Record.s3.object.size"
                  NumericLessThanEquals: 50800000
                Next: captureInitialLoadSmall
              - And:
                - Variable: "$.Record.s3.object.size"
                  NumericGreaterThan: 50800000  # empirically selected value on 2020-11-05
                - Variable: "$.Record.s3.object.size"
                  NumericLessThanEquals: 102400000
                Next: captureInitialLoad
              - Variable: "$.Record.s3.object.size"
                NumericGreaterThan: 102400000
                Next: captureInitialLoadMedium
          captureInitialLoadExtraSmall:
            Type: Task
            Resource: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:aqts-capture-raw-load-${self:provider.stage}-iowCaptureExtraSmall
            TimeoutSeconds: 120
            Catch:
              - ErrorEquals:
                  - States.ALL
                Next: errorHandler
            Next: tsTypeRouterTask
          captureInitialLoadSmall:
            Type: Task
            Resource: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:aqts-capture-raw-load-${self:provider.stage}-iowCaptureSmall
            TimeoutSeconds: 120
            Catch:
              - ErrorEquals:
                  - States.ALL
                Next: errorHandler
            Next: tsTypeRouterTask
          captureInitialLoad:
            Type: Task
            Resource: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:aqts-capture-raw-load-${self:provider.stage}-iowCapture
            TimeoutSeconds: 120
            Catch:
              - ErrorEquals:
                - States.ALL
                Next: errorHandler
            Next: tsTypeRouterTask
          captureInitialLoadMedium:
            Type: Task
            Resource: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:aqts-capture-raw-load-${self:provider.stage}-iowCaptureMedium
            TimeoutSeconds: 120
            Catch:
              - ErrorEquals:
                - States.ALL
                Next: errorHandler
            Next: tsTypeRouterTask
          tsTypeRouterTask:
            Type: Task
            Resource: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:aqts-ts-type-router-${self:provider.stage}-determineRoute
            Parameters:
              id.$: $.id
              partitionNumber.$: $.partitionNumber
            ResultPath: $.tsTypeRouterResult
            TimeoutSeconds: 75
            Catch:
              - ErrorEquals:
                - States.ALL
                Next: errorHandler
            Next: tsTypeRouterChoice
          tsTypeRouterChoice:
            Type: Choice
            Choices:
              - Variable: "$.tsTypeRouterResult.type"
                StringEquals: tsDescriptionList
                Next: tsDescriptionList
              - Variable: "$.tsTypeRouterResult.type"
                StringEquals: tsCorrectedData
                Next: tsCorrectedData
              - And:
                - Variable: "$.tsTypeRouterResult.type"
                  StringEquals: fieldVisitData
                - Variable: "$$.StateMachine.Name"
                  StringEquals: "aqts-capture-state-machine-PROD-EXTERNAL"
                Next: defaultSuccess
              - And:
                - Variable: "$.tsTypeRouterResult.type"
                  StringEquals: fieldVisitReadings
                - Variable: "$$.StateMachine.Name"
                  StringEquals: "aqts-capture-state-machine-PROD-EXTERNAL"
                Next: defaultSuccess
              - Variable: "$.tsTypeRouterResult.type"
                StringEquals: fieldVisitData
                Next: tsFieldVisit
              - Variable: "$.tsTypeRouterResult.type"
                StringEquals: fieldVisitReadings
                Next: tsFieldVisitReadings
            Default: defaultSuccess
          tsDescriptionList:
            Type: Task
            Resource: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:aqts-capture-ts-description-${self:provider.stage}-processTsDescription
            Parameters:
              id.$: $.id
              partitionNumber.$: $.partitionNumber
            ResultPath: $.tsDescriptionResult
            TimeoutSeconds: 75
            Catch:
              - ErrorEquals:
                - States.ALL
                Next: errorHandler
            Next: defaultSuccess
          tsCorrectedData:
            Type: Task
            Resource: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:aqts-capture-ts-corrected-${self:provider.stage}-preProcess
            Parameters:
              id.$: $.id
              partitionNumber.$: $.partitionNumber
            ResultPath: $.tsCorrectedResult
            TimeoutSeconds: 105
            Catch:
              - ErrorEquals:
                - States.ALL
                Next: errorHandler
            Next: tsDataTypeRouter
          tsFieldVisit:
            Type: Task
            Resource: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:aqts-capture-ts-field-visit-${self:provider.stage}-preProcess
            Parameters:
              id.$: $.id
              partitionNumber.$: $.partitionNumber
            ResultPath: $.tsFieldVisitResult
            TimeoutSeconds: 105
            Catch:
              - ErrorEquals:
                - States.ALL
                Next: errorHandler
            Next: fieldVisitTransform
          tsFieldVisitReadings:
            Type: Task
            Resource: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:aqts-capture-field-visit-metadata-${self:provider.stage}-preProcess
            Parameters:
              id.$: $.id
              partitionNumber.$: $.partitionNumber
            ResultPath: $.tsFieldVisitReadingsResult
            TimeoutSeconds: 105
            Catch:
              - ErrorEquals:
                - States.ALL
                Next: errorHandler
            Next: tsFieldVisit
          fieldVisitTransform:
            Type: Task
            Resource: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:aqts-capture-field-visit-transform-${self:provider.stage}-transform
            Parameters:
              id.$: $.id
              partitionNumber.$: $.partitionNumber
              type.$: $.tsTypeRouterResult.type
            ResultPath: $.fieldVisitTransformResult
            TimeoutSeconds: 105
            Catch:
              - ErrorEquals:
                  - States.ALL
                Next: errorHandler
            Next: loadDiscreteGW
          loadDiscreteGW:
            Type: Task
            Resource: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:aqts-capture-discrete-loader-${self:provider.stage}-loadDiscrete
            Parameters:
              locationIdentifier.$: $.fieldVisitTransformResult.locationIdentifier
              monitoringLocationIdentifier.$: $.fieldVisitTransformResult.monitoringLocationIdentifier
            ResultPath: $.loadDiscreteGWResult
            TimeoutSeconds: 75
            End: true
            Catch:
              - ErrorEquals:
                  - States.ALL
                Next: errorHandler
          tsDataTypeRouter:
            Type: Choice
            Choices:
              - Variable: $.tsCorrectedResult.timeSeries.dataType
                StringEquals: tsDailyValueStatisticalTransform
                Next: tsDailyValueStatisticalTransform
            Default: defaultSuccess
          tsDailyValueStatisticalTransform:
            Type: Task
            Resource: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:aqts-capture-dvstat-transform-${self:provider.stage}-transform
            Parameters:
              uniqueId.$: $.tsCorrectedResult.timeSeries.uniqueId
              type.$: $.tsTypeRouterResult.type
              id.$: $.id
              partitionNumber.$: $.partitionNumber
              dataType.$: $.tsCorrectedResult.timeSeries.dataType
            ResultPath: $.dvstatTransformResult
            TimeoutSeconds: 75
            Catch:
              - ErrorEquals:
                - States.ALL
                Next: errorHandler
            Next: loadToObservationDb
          loadToObservationDb:
            Type: Task
            Parameters:
              uniqueId.$: $.tsCorrectedResult.timeSeries.uniqueId
            Resource: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:aqts-capture-ts-loader-${self:provider.stage}-loadTimeSeries
            ResultPath: $.loadTimeSeriesResult
            TimeoutSeconds: 75
            End: true
            Catch:
              - ErrorEquals:
                - States.ALL
                Next: errorHandler
          errorHandler:
            Type: Task
            Parameters:
              "executionArn.$": "$$.Execution.Id"
              "startInput.$": "$$.Execution.Input"
            Resource: arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:aqts-capture-error-handler-${self:provider.stage}-aqtsErrorHandler
            TimeoutSeconds: 60
            Next: defaultFail
          defaultSuccess:
            Type: Succeed
          defaultFail:
            Type: Fail

resources:
  Resources:
    snsTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: ${self:service}-${self:provider.stage}-topic
        TopicName: ${self:service}-${self:provider.stage}-topic
    snsSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: GW-W-OCOO-IOW-AQTS-Capture-Warnings@doimspp.onmicrosoft.com
        Protocol: email
        TopicArn: { "Fn::Join": [ "", [ "arn:aws:sns:${self:provider.region}:", { "Ref": "AWS::AccountId" }, ":${self:resources.Resources.snsTopic.Properties.TopicName}" ] ] }
    stateDurationAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: ${self:service}-${self:provider.stage}-duration-alarm
        AlarmDescription: Notify when duration exceeds a threshold
        Namespace: 'AWS/States'
        Dimensions:
          - Name: StateMachineArn
            Value:
              Ref: AqtsDashcaptureDashstateDashmachineDash${self:custom.tier.${self:provider.stage}.parsed}
        MetricName: ExecutionTime
        Statistic: Maximum
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Period: 60
        EvaluationPeriods: 1
        Threshold: 295000  # just under 5 minutes
        TreatMissingData: missing
        AlarmActions:
          - Ref: snsTopic

plugins:
  - serverless-step-functions
  - serverless-plugin-git-variables
  - serverless-pseudo-parameters
